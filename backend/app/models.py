# FastAPI Data Models: company-happiness/backend/app/models.py
from pydantic import BaseModel, Field
from typing import List, Optional

# --- Factor Rating Model ---
# Represents the score for a single happiness factor (e.g., Work-Life Balance)
class FactorScore(BaseModel):
    factor_name: str = Field(..., description="Name of the factor (e.g., Culture & Ethics)")
    score: float = Field(..., description="Score out of 5.0 for this factor.")
    description: Optional[str] = Field(None, description="Brief insight/summary generated by AI.")

# --- Overall Company Score Model ---
# Represents the full ranking data returned by the API
class CompanyScore(BaseModel):
    company_id: str = Field(..., description="Unique identifier for the company (e.g., TCS, Wipro)")
    overall_score: float = Field(..., description="Weighted average happiness index (0.0 to 5.0)")
    is_cached: bool = Field(False, description="True if the data came from Redis cache.")
    
    # Detailed breakdown of factors
    key_factors: List[FactorScore] = Field(..., description="Detailed breakdown of scores per factor.")

    # Status of the data (e.g., 'static', 'live_gemini', 'historical')
    status: str = Field(..., description="Source/freshness status of the data.")
